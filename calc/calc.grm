(* Sample interactive calculator for ML-Yacc *)

fun lookup "bogus" = "10000"
  | lookup s = s

%%

%eop EOF SEMI

(* %pos declares the type of positions for terminals.
   Each symbol has an associated left and right position. *)

%pos int

%left SUB PLUS
%left TIMES DIV
%right CARAT

%term ID of string | NUM of string | PLUS | TIMES | PRINT | LINK |
      SEMI | EOF | CARAT | DIV | SUB | TXT of string
%nonterm EXP of string | START of string option | VAL of string

%name Calc

%subst PRINT for ID
%prefer PLUS TIMES DIV SUB
%keyword PRINT SEMI

%noshift EOF
%value ID ("bogus")
%verbose
%%

(* the parser returns the value associated with the expression *)

  START : PRINT EXP (SOME EXP)
        | EXP (SOME EXP) 
	| LINK EXP (print "[ ";
		    (*print (Int.toString EXP); *)
		    print (EXP); 
		    print " ] ";
		    print (EXP); 
		    print " ) \n"; 
		    SOME EXP)
        | (NONE)
  EXP : NUM             (NUM)
      | ID              (lookup ID)
      | EXP PLUS EXP    (EXP1^ " " ^EXP2)


